# gcloud container clusters get-credentials cluster-1 --zone us-central1-f --project mrjones-gke
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: workouts
spec:
  replicas: 2
  template:
    metadata:
      labels:
        run: workouts
    spec:
      containers:
      - name: workouts
        image: gcr.io/mrjones-gke/workouts:2018-01-13.0
        imagePullPolicy: IfNotPresent
        env:
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: workouts-google-creds
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: workouts-google-creds
              key: google-client-secret
        - name: ADMIN_GOOGLE_ID
          valueFrom:
            secretKeyRef:
              name: workouts-admin
              key: id
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: workouts-sql
              key: host
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        # https://github.com/kubernetes/kubernetes/wiki/User-FAQ#use-of-environment-variables-on-the-command-line
        # https://github.com/kubernetes/kubernetes/issues/386
        command: ["sh", "-c", "/deploy/WorkoutsMain --port=8000 --static_dir=/deploy/static --mysql_host=$MYSQL_HOST --google_client_id=$GOOGLE_CLIENT_ID --google_client_secret=$GOOGLE_CLIENT_SECRET --admin_kind=google --admin_id $ADMIN_GOOGLE_ID"]
      # https://cloud.google.com/sql/docs/mysql/connect-kubernetes-engine
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=sql-fortress:fortress-one=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
        - name: cloudsql-service-account-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
      - name: cloudsql-service-account-credentials
        secret:
          secretName: cloudsql-service-account-credentials
      - name: cloudsql
        emptyDir:
